{
	"name": "color-block-comments",
	"displayName": "Color Block Comments",
	"description": "",
	"version": "0.0.1",
	"engines": {
		"vscode": "^1.65.0"
	},
	"categories": [
		"Other",
		"Snippets"
	],
	"activationEvents": [
		"*"
	],
	"main": "./dist/extension.js",
	"contributes": {
		"commands": [
			{
				"command": "color-block-comments.makeComment",
				"title": "Create Block Comment"
			}
		],
		"snippets": [
			{
				"path": "./src/cbc_snippets.code-snippets"
			}
		],
		"configuration": [
			{
				"title": "Wrap Text",
				"properties": {
					"Color Block Comments.wrapText.enabled": {
						"type": "boolean",
						"default": false,
						"description": "Make the color block shrink horizontally to match the minimum amount of code.",
						"scope": "window",
						"order": 0
					},
					"Color Block Comments.wrapText.padding": {
						"type": "number",
						"default": 1,
						"description": "Padding to add if `wrapText` is enabled. Measured in characters.",
						"scope": "window"
					}
				}
			},
			{
				"title": "Standardize Color Brightness",
				"properties": {
					"Color Block Comments.standardizeColorBrightness.enabled": {
						"type": "boolean",
						"default": true,
						"description": "Change colors to standardized brightness. Configurable with `backgroundColorBrightness` and `backgroundColorBrightness`",
						"scope": "window",
						"order": 0
					},
					"Color Block Comments.standardizeColorBrightness.background": {
						"type": "number",
						"default": 50,
						"description": "Lumens value to use when standardizing background brightness.",
						"scope": "window"
					},
					"Color Block Comments.standardizeColorBrightness.commentText": {
						"type": "number",
						"default": 80,
						"description": "Lumens value to use when standardizing brightness of the text of the first line of the colored block.",
						"scope": "window"
					}
				}
			},
			{
				"title": "Border",
				"properties": {
					"Color Block Comments.border.width": {
						"type": "string",
						"default": "0.2ch",
						"description": "CSS border width.",
						"scope": "window"
					},
					"Color Block Comments.border.radius": {
						"type": "string",
						"default": "0.5ch",
						"description": "CSS border radius.",
						"scope": "window"
					},
					"Color Block Comments.border.opacity": {
						"type": "number",
						"default": 0.4,
						"description": "Opacity/alpha in the range 0-1.",
						"scope": "window"
					},
					"Color Block Comments.border.style": {
						"type": "string",
						"default": "solid",
						"description": "CSS border-style.",
						"scope": "window"
					}
				}
			},
			{
				"title": "Background",
				"properties": {
					"Color Block Comments.background.opacity": {
						"type": "number",
						"default": "0.2",
						"description": "Opacity/alpha in the range 0-1.",
						"scope": "window"
					}
				}
			},
			{
				"title": "Comment Line",
				"properties": {
					"Color Block Comments.commentLine.color": {
						"type": "boolean",
						"default": true,
						"description": "Apply color to the comment line text.",
						"scope": "window"
					},
					"Color Block Comments.commentLine.lineOpacity": {
						"type": "number",
						"default": 0.4,
						"description": "Opacity of the comment delimiter and color block arguments.",
						"scope": "window"
					},
					"Color Block Comments.commentLine.commentFontWeight": {
						"type": "string",
						"default": "bold",
						"description": "CSS font-weight of the main comment text.",
						"scope": "window"
					}
				}
			},
			{
				"title": "Behavior",
				"properties": {
					"Color Block Comments.behavior.autoUpdate": {
						"type": "boolean",
						"default": true,
						"description": "Automatically update color blocks when lines are added/removed inside its range.",
						"scope": "window"
					}
				}
			}
		]
	},
	"scripts": {
		"vscode:prepublish": "npm run package",
		"compile": "webpack",
		"watch": "webpack --watch",
		"package": "webpack --mode production --devtool hidden-source-map",
		"compile-tests": "tsc -p . --outDir out",
		"watch-tests": "tsc -p . -w --outDir out",
		"pretest": "npm run compile-tests && npm run compile && npm run lint",
		"lint": "eslint src --ext ts",
		"test": "node ./out/test/runTest.js"
	},
	"devDependencies": {
		"@types/glob": "^7.2.0",
		"@types/mocha": "^9.1.0",
		"@types/node": "14.x",
		"@types/vscode": "^1.65.0",
		"@typescript-eslint/eslint-plugin": "^5.12.1",
		"@typescript-eslint/parser": "^5.12.1",
		"@vscode/test-electron": "^2.1.2",
		"eslint": "^8.9.0",
		"glob": "^7.2.0",
		"mocha": "^9.2.1",
		"ts-loader": "^9.2.6",
		"typescript": "^4.5.5",
		"webpack": "^5.69.1",
		"webpack-cli": "^4.9.2"
	}
}